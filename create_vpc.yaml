---
- hosts: localhost
  gather_facts: no
  module_defaults:
    group/aws:
      region: "us-east-1"
  tasks:
    - name: Create VPC
      ec2_vpc_net:
        name: module5
        cidr_block: 10.10.0.0/16
        tags:
          Module: 5
        state: present
      register: vpc
    - name: Create ig-public subnet 1
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: module5 public-sn-1
          Module: 5
        cidr: 10.10.0.0/24
        az: "us-east-1a"
        state: present
      register: public_subnet_1
    - name: Create ig-public subnet 2
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: module5 public-sn-2
          Module: 5
        cidr: 10.10.0.0/24
        az: "us-east-1b"
        state: present
      register: public_subnet_2
    - name: Create ig-private subnet 1
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: module5 private-sn-1
          Module: 5
        cidr: 10.10.1.0/24
        az: "us-east-1a"
        state: present
      register: private_subnet_1
    - name: Create ig-private subnet 2
      ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: module5 private-sn-2
          Module: 5
        cidr: 10.10.1.0/24
        az: "us-east-1b"
        state: present
      register: private_subnet_2
    - name: Create Internet Gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: module5 gateway
          Module: 5
        state: present
      register: igw
    - name: Create public route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: module5
        subnets:
          - "{{ public_subnet_1.subnet.id }}"
          - "{{ public_subnet_2.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        state: present
    - name: Create private route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        tags:
          Name: module5
        subnets:
          - "{{ private_subnet_1.subnet.id }}"
          - "{{ private_subnet_2.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        state: present
    - name: Create security group
      ec2_group:
        name: module5-developer-sg
        description: Developer security group
        vpc_id: "{{ vpc.vpc.id }}"
        rules:
          - proto: tcp
            ports:
              - 22
              - 80
            cidr_ip: 0.0.0.0/0
            rule_desc: allow all to ports 22 and 80
        state: present
    - name: Create public acl
      ec2_vpc_nacl:
        vpc_id: "{{ vpc.vpc.id }}"
        name: module5-ig-public-acl
        subnets: 
          - "{{ public_subnet_1.subnet.id }}"
          - "{{ public_subnet_2.subnet.id }}"
        tags:
          Name: module5-ig-public-acl
        ingress:
          # rule no, protocol, allow/deny, cidr, icmp_type, icmp_code,
          #                                             port from, port to
          - [100, 'tcp', 'allow', '69.73.61.236/32', null, null, 5000, 5000]
          - [110, 'tcp', 'allow', '68.119.93.72/32', null, null, 5000, 5000]
          - [111, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22]
          - [120, 'tcp', 'allow', '24.239.105.213/32', null, null, 5000, 5000]
          - [140, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
          - [150, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
          - [160, 'tcp', 'allow', '0.0.0.0/0', null, null, 443, 443]
        egress:
          - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
          - [110, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
          - [120, 'tcp', 'allow', '0.0.0.0/0', null, null, 443, 443]
          - [130, 'tcp', 'allow', '69.73.61.236/32', null, null, 5000, 5000]
          - [140, 'tcp', 'allow', '24.239.105.213/32', null, null, 5000, 5000]
          - [150, 'tcp', 'allow', '68.119.93.72/32', null, null, 5000, 5000]
          - [160, 'tcp', 'allow', '0.0.0.0/0', null, null, 22, 22]
        state: 'present'
    - name: Create private acl
      ec2_vpc_nacl:
        vpc_id: "{{ vpc.vpc.id }}"
        name: module5-ig-private-acl
        subnets: 
          - "{{ private_subnet_1.subnet.id }}"
          - "{{ private_subnet_2.subnet.id }}"
        tags:
          Name: module5-ig-private-acl
        ingress:
          # rule no, protocol, allow/deny, cidr, icmp_type, icmp_code,
          #                                             port from, port to
          - [100, 'tcp', 'allow', '10.10.0.0/16', null, null, 5432, 5432]
          - [140, 'tcp', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
        egress:
          - [100, 'all', 'allow', '0.0.0.0/0', null, null, 1024, 65535]
        state: 'present'
